I8,        8        ,8I    db         88           88      a8P   88888888888  88888888ba   
`8b       d8b       d8'   d88b        88           88    ,88'    88           88      "8b  
 "8,     ,8"8,     ,8"   d8'`8b       88           88  ,88"      88           88      ,8P  
  Y8     8P Y8     8P   d8'  `8b      88           88,d88'       88aaaaa      88aaaaaa8P'  
  `8b   d8' `8b   d8'  d8YaaaaY8b     88           8888"88,      88"""""      88""""88'    
   `8a a8'   `8a a8'  d8""""""""8b    88           88P   Y8b     88           88    `8b    
    `8a8'     `8a8'  d8'        `8b   88           88     "88,   88           88     `8b   
     `8'       `8'  d8'          `8b  88888888888  88       Y8b  88888888888  88      `8b  

==============================================================================

1. Intro

Walker attempts to make slicing up code paths in an application -- typically for doing a presentation to an interested partie(s) -- slightly easier. It also exists soley because I wanted to right a Vim Plugin that did _something_

==============================================================================

2. Usage

Use :call walker#mark() (mapped to <leader>wm by default) which will prompt you for the name of a walk. Once you've selected a walk, subsequent calls to mark() will silently write the line you've marked to the chosen file.


==============================================================================o

3. Configuration

g:walker_map_keys: set to '0' to remove the default bindings.
g:walker_path: Directory store walkfiles
